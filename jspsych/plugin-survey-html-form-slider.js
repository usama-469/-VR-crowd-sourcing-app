var jsPsychSurveyHtmlFormSlider = (function (jspsych) {
  'use strict';

  // hacky, but whatever [javascript...] :)
  var slider_1_moved = false;
  var slider_2_moved = false;
  var slider_3_moved = false;
  var slider_4_moved = false;
  var slider_5_moved = false;
  var slider_6_moved = false;

  const info = {
      name: "survey-html-form-slider",
      parameters: {
          /** HTML formatted string containing all the input elements to display. Every element has to have its own distinctive name attribute. The <form> tag must not be included and is generated by the plugin. */
          html: {
              type: jspsych.ParameterType.HTML_STRING,
              pretty_name: "HTML",
              default: null,
          },
          /** HTML formatted string to display at the top of the page above all the questions. */
          preamble: {
              type: jspsych.ParameterType.HTML_STRING,
              pretty_name: "Preamble",
              default: null,
          },
          /** The text that appears on the button to finish the trial. */
          button_label: {
              type: jspsych.ParameterType.STRING,
              pretty_name: "Button label",
              default: "Continue",
          },
          /** The HTML element ID of a form field to autofocus on. */
          autofocus: {
              type: jspsych.ParameterType.STRING,
              pretty_name: "Element ID to focus",
              default: "",
          },
          /** Retrieve the data as an array e.g. [{name: "INPUT_NAME", value: "INPUT_VALUE"}, ...] instead of an object e.g. {INPUT_NAME: INPUT_VALUE, ...}. */
          dataAsArray: {
              type: jspsych.ParameterType.BOOL,
              pretty_name: "Data As Array",
              default: false,
          },
          /** Setting this to true will enable browser auto-complete or auto-fill for the form. */
          autocomplete: {
              type: jspsych.ParameterType.BOOL,
              pretty_name: "Allow autocomplete",
              default: false,
          },
          require_movement: {
            type: jspsych.ParameterType.BOOL,
            pretty_name: 'Require movement',
            default: false,
            description: 'If true, the participant will have to move the sliders before continuing.'
          },
          items: {
            type: jspsych.ParameterType.INT,
            pretty_name: 'Number of sliders',
            default: 1,
            description: 'Number of sliders to show in the form.'
          }
      },
  };
  /**
   * **survey-html-form-slider**
   *
   * jsPsych plugin for displaying free HTML forms and collecting responses from all input elements
   *
   * @author Jan Simson
   * @see {@link https://www.jspsych.org/plugins/jspsych-survey-html-form-slider/ survey-html-form-slider plugin documentation on jspsych.org}
   */
  class SurveyHtmlFormSliderPlugin {
      constructor(jsPsych) {
          this.jsPsych = jsPsych;
      }
      trial(display_element, trial) {
          // array to store flags of movement of sliders
          // hacky, but whatever [javascript...] :)
          if (trial.require_movement){
          var sliders_moved = [];
            for(var i = 0; i < trial.items; i++) {
              sliders_moved[i] = 0;
            }
          }
          var html = "";
          // show preamble text
          if (trial.preamble !== null) {
              html +=
                  '<div id="jspsych-survey-html-form-slider-preamble" class="jspsych-survey-html-form-slider-preamble">' +
                      trial.preamble +
                      "</div>";
          }
          // start form
          if (trial.autocomplete) {
              html += '<form id="jspsych-survey-html-form-slider">';
          }
          else {
              html += '<form id="jspsych-survey-html-form-slider" autocomplete="off">';
          }
          // add form HTML / input elements
          html += trial.html;
          // add submit button
          html +=
              '<input type="submit" id="jspsych-survey-html-form-slider-next" class="jspsych-btn jspsych-survey-html-form-slider" '+ (trial.require_movement ? "disabled" : "") + ' value="' +
                  trial.button_label +
                  '"></input>';
          html += "</form>";
          display_element.innerHTML = html;
          if (trial.autofocus !== "") {
              var focus_elements = display_element.querySelectorAll("#" + trial.autofocus);
              if (focus_elements.length === 0) {
                  console.warn("No element found with id: " + trial.autofocus);
              }
              else if (focus_elements.length > 1) {
                  console.warn('The id "' + trial.autofocus + '" is not unique so autofocus will not work.');
              }
              else {
                  focus_elements[0].focus();
              }
          }

          // check if all entries in row are unique
          if(trial.require_movement){
            for (var item = 0; item < trial.items; item++) { // iterate over rows
              display_element.querySelector('#slider-' + item).addEventListener('change', function(){            
                var numberPattern = /\d+/g;
                var numbers = this.id.match(numberPattern);
                var item_event = numbers[0];  // extract item from id
                // update flag in the array
                sliders_moved[item_event] = 1;
                // get number of sliders moved
                var sliders_moved_count = 0;
                for (var i = 0; i < trial.items; i++) {
                   if (sliders_moved[i]) {
                      sliders_moved_count++;
                   }
                }
                // update status of button
                if (sliders_moved_count === trial.items) {  // check if all sliders were moved
                  display_element.querySelector('#jspsych-survey-html-form-slider-next').disabled = false;
                }
              });
            }
          }

          display_element
              .querySelector("#jspsych-survey-html-form-slider")
              .addEventListener("submit", (event) => {
              // don't submit form
              event.preventDefault();
              // measure response time
              var endTime = performance.now();
              var response_time = Math.round(endTime - startTime);
              var this_form = display_element.querySelector("#jspsych-survey-html-form-slider");
              var question_data = serializeArray(this_form);
              if (!trial.dataAsArray) {
                  question_data = objectifyForm(question_data);
              }
              // save data
              var trialdata = {
                  rt: response_time,
                  response: question_data,
              };
              display_element.innerHTML = "";
              // next trial
              this.jsPsych.finishTrial(trialdata);
          });
          var startTime = performance.now();
          /**
           * Serialize all form data into an array
           * @copyright (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com
           * @param  {Node}   form The form to serialize
           * @return {String}      The serialized form data
           */
          function serializeArray(form) {
              // Setup our serialized data
              var serialized = [];
              // Loop through each field in the form
              for (var i = 0; i < form.elements.length; i++) {
                  var field = form.elements[i];
                  // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields
                  if (!field.name ||
                      field.disabled ||
                      field.type === "file" ||
                      field.type === "reset" ||
                      field.type === "submit" ||
                      field.type === "button")
                      continue;
                  // If a multi-select, get all selections
                  if (field.type === "select-multiple") {
                      for (var n = 0; n < field.options.length; n++) {
                          if (!field.options[n].selected)
                              continue;
                          serialized.push({
                              name: field.name,
                              value: field.options[n].value,
                          });
                      }
                  }
                  // Convert field data to a query string
                  else if ((field.type !== "checkbox" && field.type !== "radio") || field.checked) {
                      serialized.push({
                          name: field.name,
                          value: field.value,
                      });
                  }
              }
              return serialized;
          }
          // from https://stackoverflow.com/questions/1184624/convert-form-data-to-javascript-object-with-jquery
          function objectifyForm(formArray) {
              //serialize data function
              var returnArray = {};
              for (var i = 0; i < formArray.length; i++) {
                  returnArray[formArray[i]["name"]] = formArray[i]["value"];
              }
              return returnArray;
          }
      }
  }
  SurveyHtmlFormSliderPlugin.info = info;

  return SurveyHtmlFormSliderPlugin;

})(jsPsychModule);
